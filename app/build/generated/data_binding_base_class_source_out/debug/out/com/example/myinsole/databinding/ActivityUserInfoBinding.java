// Generated by view binder compiler. Do not edit!
package com.example.myinsole.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myinsole.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUserInfoBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final EditText address;

  @NonNull
  public final EditText age;

  @NonNull
  public final EditText birthday;

  @NonNull
  public final EditText disease;

  @NonNull
  public final EditText diseaseInfo;

  @NonNull
  public final EditText firstEmergencyName;

  @NonNull
  public final EditText firstEmergencyPhone;

  @NonNull
  public final EditText height;

  @NonNull
  public final EditText name;

  @NonNull
  public final EditText pwd;

  @NonNull
  public final EditText secondEmergencyName;

  @NonNull
  public final EditText secondEmergencyPhone;

  @NonNull
  public final EditText sex;

  @NonNull
  public final EditText tel;

  @NonNull
  public final EditText weight;

  private ActivityUserInfoBinding(@NonNull ScrollView rootView, @NonNull EditText address,
      @NonNull EditText age, @NonNull EditText birthday, @NonNull EditText disease,
      @NonNull EditText diseaseInfo, @NonNull EditText firstEmergencyName,
      @NonNull EditText firstEmergencyPhone, @NonNull EditText height, @NonNull EditText name,
      @NonNull EditText pwd, @NonNull EditText secondEmergencyName,
      @NonNull EditText secondEmergencyPhone, @NonNull EditText sex, @NonNull EditText tel,
      @NonNull EditText weight) {
    this.rootView = rootView;
    this.address = address;
    this.age = age;
    this.birthday = birthday;
    this.disease = disease;
    this.diseaseInfo = diseaseInfo;
    this.firstEmergencyName = firstEmergencyName;
    this.firstEmergencyPhone = firstEmergencyPhone;
    this.height = height;
    this.name = name;
    this.pwd = pwd;
    this.secondEmergencyName = secondEmergencyName;
    this.secondEmergencyPhone = secondEmergencyPhone;
    this.sex = sex;
    this.tel = tel;
    this.weight = weight;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUserInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUserInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_user_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUserInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.address;
      EditText address = ViewBindings.findChildViewById(rootView, id);
      if (address == null) {
        break missingId;
      }

      id = R.id.age;
      EditText age = ViewBindings.findChildViewById(rootView, id);
      if (age == null) {
        break missingId;
      }

      id = R.id.birthday;
      EditText birthday = ViewBindings.findChildViewById(rootView, id);
      if (birthday == null) {
        break missingId;
      }

      id = R.id.disease;
      EditText disease = ViewBindings.findChildViewById(rootView, id);
      if (disease == null) {
        break missingId;
      }

      id = R.id.diseaseInfo;
      EditText diseaseInfo = ViewBindings.findChildViewById(rootView, id);
      if (diseaseInfo == null) {
        break missingId;
      }

      id = R.id.firstEmergencyName;
      EditText firstEmergencyName = ViewBindings.findChildViewById(rootView, id);
      if (firstEmergencyName == null) {
        break missingId;
      }

      id = R.id.firstEmergencyPhone;
      EditText firstEmergencyPhone = ViewBindings.findChildViewById(rootView, id);
      if (firstEmergencyPhone == null) {
        break missingId;
      }

      id = R.id.height;
      EditText height = ViewBindings.findChildViewById(rootView, id);
      if (height == null) {
        break missingId;
      }

      id = R.id.name;
      EditText name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.pwd;
      EditText pwd = ViewBindings.findChildViewById(rootView, id);
      if (pwd == null) {
        break missingId;
      }

      id = R.id.secondEmergencyName;
      EditText secondEmergencyName = ViewBindings.findChildViewById(rootView, id);
      if (secondEmergencyName == null) {
        break missingId;
      }

      id = R.id.secondEmergencyPhone;
      EditText secondEmergencyPhone = ViewBindings.findChildViewById(rootView, id);
      if (secondEmergencyPhone == null) {
        break missingId;
      }

      id = R.id.sex;
      EditText sex = ViewBindings.findChildViewById(rootView, id);
      if (sex == null) {
        break missingId;
      }

      id = R.id.tel;
      EditText tel = ViewBindings.findChildViewById(rootView, id);
      if (tel == null) {
        break missingId;
      }

      id = R.id.weight;
      EditText weight = ViewBindings.findChildViewById(rootView, id);
      if (weight == null) {
        break missingId;
      }

      return new ActivityUserInfoBinding((ScrollView) rootView, address, age, birthday, disease,
          diseaseInfo, firstEmergencyName, firstEmergencyPhone, height, name, pwd,
          secondEmergencyName, secondEmergencyPhone, sex, tel, weight);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
